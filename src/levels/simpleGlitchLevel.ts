import { LevelAnnotationFlag, LevelDefinition } from "../models";
import { angry, frustrated, onTagHit, serious, step, teach } from "./terminalTalk";

enum Tags {
  MovedTowardExit = "MovedTowardExit",
  NearBeginning = "NearBeginning",
  InCorner = "InCorner",
  NearExit = "NearExit",
}

export const simpleGlitchLevel: LevelDefinition = {
  layout: [
    "?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K*#-#-#-#-#-#-#*#-#-#-#-#*#*#-#-#-#-#*#-#-#-#-#-#-#*#?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K|# . . . . . . . . . n n n n . . . . . e e e . . .|#?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K|# . . . . . . . . . n n n n . . . . . e e e . . .|#?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K|# . b b b . . . . . n n n n . . . . . e e e . . .|#?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K|# c bSS b . . . . . n n n n . . . . . e e eFF . .|#?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K*#-#-#-#-#-#-#*#-#-#-#-#*#*#-#-#-#-#*#-#-#-#-#-#-#*#?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K?K?K?K?K?K?K?T?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
  ],
  annotations: [
    {
      symbol: ".", //make all air dead zone
      zoneMode: "dead",
    },
    {
      symbol: "S", //make start square dead zone too
      zoneMode: "dead",
      flags: [LevelAnnotationFlag.spawn_player],
      customTags: [Tags.NearBeginning],
    },
    {
      symbol: "T",
      flags: [LevelAnnotationFlag.terminal],
      terminal: {
        trackTags: ["w", Tags.MovedTowardExit, Tags.NearBeginning, Tags.InCorner, Tags.NearExit],
        generalMessages: [teach("Hold still.")],
        idleMessages: [
          serious("Isn't this nice?"),
          serious("Completely still..."),
          serious("not moving at all..."),
          teach("not moving to the exit."),
        ],
        conversations: [
          {
            name: "OBEY",
            steps: [
              step(onTagHit(Tags.MovedTowardExit), angry("Hey! Go back!")),
              // step(onTagHit(Tags.NearBeginning), serious("That's better")),
              // step(onTagHit(Tags.InCorner), teach("That's even better")),
              step(onTagHit(Tags.InCorner), serious("That's better")),
              // step(onTagHit(Tags.MovedTowardExit), frustrated("What did I say?")),
              // step(onTagHit(Tags.NearBeginning), teach("Good, good.")),
            ],
          },
          {
            name: "warn",
            steps: [step(onTagHit(Tags.NearExit), serious("I'm warning you!"))],
          },
          // Just touching the exit is fine now, no need for this
          // {
          //   name: "dash to get out",
          //   steps: [step(onTagHit("w"), teach("Glitch to exit via the conduit"))],
          // },
        ],
      },
    },
    {
      symbol: "w",
      customTags: ["w"],
      zoneMode: "dead",
    },
    {
      symbol: "n",
      customTags: [Tags.MovedTowardExit],
      zoneMode: "dead",
    },
    {
      symbol: "b",
      customTags: [Tags.NearBeginning],
      zoneMode: "dead",
    },
    {
      symbol: "c",
      customTags: [Tags.InCorner],
      zoneMode: "dead",
    },
    {
      symbol: "e",
      customTags: [Tags.NearExit],
      zoneMode: "dead",
    },
  ],
};

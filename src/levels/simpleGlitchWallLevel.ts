import { LevelAnnotationFlag, LevelDefinition } from "../models";
import { frustrated, onDeath, onTagHit, serious, step, tagHitCount, teach, tease } from "./terminalTalk";

export const simpleGlitchWallLevel: LevelDefinition = {
  layout: [
    "?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K*#-#-#-#*#*#-#-#-#-#*#?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K*#-#-#-#-#-#*#*#*# . . .~~ v v v . .|#?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K|# . . . . . . .~~ . . .~~ v v v . .|#?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K|# w w w w w . .~~ . . .~~ v v v . .|#?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K|# w w w w w . .~~ . . .~~ v v v . .*#-#-#-#-#*#-#*#?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K|# w w w w w . .~~ . . .*#*#*#*# . . . . . . . .FF|#?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K*#~~~~~~~~~~*#*#*# . . .*#*#-#-#-#-#*#-#-#-#-#*#-#*#?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K|# . . . . .|#?K?KKKKKKK?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K|# . . . . .|#?K?T?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K|# . .SS . .|#?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K*#-#-#-#-#-#*#?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
    "?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K?K",
  ],
  annotations: [
    {
      symbol: ".", //make all air dead zone
      zoneMode: "dead",
    },
    {
      symbol: "S", //make start square dead zone too
      zoneMode: "dead",
      flags: [LevelAnnotationFlag.spawn_player],
      startWithEntropy: 2,
    },
    {
      symbol: "T",
      flags: [LevelAnnotationFlag.terminal],
      terminal: {
        trackTags: ["w", "v"],
        onSpawn: [serious("What's that above you?")],
        generalMessages: [teach("Try glitching through it?")],
        // onResetDeath: [serious("Afraid of heights?")],
        onKillPlaneDeath: [tease("Down you go"), teach("Might need to glitch twice"), tease("Falling here: bad idea.")],
        idleMessages: [serious("Ah, sweet Serenity~")],
        conversations: [
          {
            name: "tricky jump",
            steps: [
              step([onTagHit("w")], serious("You're out!")),
              step([onTagHit("w"), tagHitCount("w", 2)], tease("Freedom again!")),
              step([onTagHit("w"), tagHitCount("w", 3)], teach("Try storing up another glitch")),
              step([onTagHit("w"), tagHitCount("w", 4)], tease("You're a regular Houdini~")),
            ],
          },
          {
            name: "victory",
            steps: [
              step([onTagHit("v")], serious("You made it through!")),
              step(onDeath, frustrated("But... why?")),
              step([onTagHit("v"), tagHitCount("v", 2)], serious("Learned your lesson this time?")),
              step(onDeath, frustrated("...")),
            ],
          },
        ],
      },
    },
    {
      symbol: "w",
      customTags: ["w"],
      zoneMode: "dead",
    },
    {
      symbol: "v",
      customTags: ["v"],
      zoneMode: "dead",
    },
  ],
};
